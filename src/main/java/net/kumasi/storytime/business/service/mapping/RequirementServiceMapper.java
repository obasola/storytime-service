/*
 * Created on 16 Mar 2017 ( Time 18:41:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.storytime.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import net.kumasi.storytime.model.Requirement;
import net.kumasi.storytime.model.jpa.RequirementEntity;
import net.kumasi.storytime.model.jpa.StatusCodeEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class RequirementServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public RequirementServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'RequirementEntity' to 'Requirement'
	 * @param requirementEntity
	 */
	public Requirement mapRequirementEntityToRequirement(RequirementEntity requirementEntity) {
		if(requirementEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Requirement requirement = map(requirementEntity, Requirement.class);

		//--- Link mapping ( link to StatusCode )
		if(requirementEntity.getStatusCode() != null) {
			requirement.setStatusCodeId(requirementEntity.getStatusCode().getId());
		}
		return requirement;
	}
	
	/**
	 * Mapping from 'Requirement' to 'RequirementEntity'
	 * @param requirement
	 * @param requirementEntity
	 */
	public void mapRequirementToRequirementEntity(Requirement requirement, RequirementEntity requirementEntity) {
		if(requirement == null) {
			return;
		}

		//--- Generic mapping 
		map(requirement, requirementEntity);

		//--- Link mapping ( link : requirement )
		if( hasLinkToStatusCode(requirement) ) {
			StatusCodeEntity statusCode1 = new StatusCodeEntity();
			statusCode1.setId( requirement.getStatusCodeId() );
			requirementEntity.setStatusCode( statusCode1 );
		} else {
			requirementEntity.setStatusCode( null );
		}

	}
	
	/**
	 * Verify that StatusCode id is valid.
	 * @param StatusCode StatusCode
	 * @return boolean
	 */
	private boolean hasLinkToStatusCode(Requirement requirement) {
		if(requirement.getStatusCodeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}