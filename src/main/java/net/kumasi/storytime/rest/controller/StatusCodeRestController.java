/*
 * Created on 16 Mar 2017 ( Time 18:41:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.storytime.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import net.kumasi.storytime.model.StatusCode;
import net.kumasi.storytime.business.service.StatusCodeService;
import net.kumasi.storytime.web.listitem.StatusCodeListItem;

/**
 * Spring MVC controller for 'StatusCode' management.
 */
@Controller
public class StatusCodeRestController {

	@Resource
	private StatusCodeService statusCodeService;
	
	@RequestMapping( value="/items/statusCode",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StatusCodeListItem> findAllAsListItems() {
		List<StatusCode> list = statusCodeService.findAll();
		List<StatusCodeListItem> items = new LinkedList<StatusCodeListItem>();
		for ( StatusCode statusCode : list ) {
			items.add(new StatusCodeListItem( statusCode ) );
		}
		return items;
	}
	
	@RequestMapping( value="/statusCode",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StatusCode> findAll() {
		return statusCodeService.findAll();
	}

	@RequestMapping( value="/statusCode/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StatusCode findOne(@PathVariable("id") Integer id) {
		return statusCodeService.findById(id);
	}
	
	@RequestMapping( value="/statusCode",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StatusCode create(@RequestBody StatusCode statusCode) {
		return statusCodeService.create(statusCode);
	}

	@RequestMapping( value="/statusCode/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StatusCode update(@PathVariable("id") Integer id, @RequestBody StatusCode statusCode) {
		return statusCodeService.update(statusCode);
	}

	@RequestMapping( value="/statusCode/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		statusCodeService.delete(id);
	}
	
}
