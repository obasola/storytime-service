/*
 * Created on 16 Mar 2017 ( Time 18:41:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package net.kumasi.storytime.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "comment"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="comment", catalog="storytime" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CommentEntity.countAll", query="SELECT COUNT(x) FROM CommentEntity x" )
} )
public class CommentEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idComment", nullable=false)
    private Integer    idcomment    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="description")
    private String     description  ;

	// "requirementIdrequirement" (column "Requirement_idRequirement") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="Requirement_idRequirement", referencedColumnName="idRequirement")
    private RequirementEntity requirement ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CommentEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdcomment( Integer idcomment ) {
        this.idcomment = idcomment ;
    }
    public Integer getIdcomment() {
        return this.idcomment;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : description ( MEDIUMTEXT ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setRequirement( RequirementEntity requirement ) {
        this.requirement = requirement;
    }
    public RequirementEntity getRequirement() {
        return this.requirement;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idcomment);
        sb.append("]:"); 
        // attribute 'description' not usable (type = String Long Text)
        return sb.toString(); 
    } 

}
