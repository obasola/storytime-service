/*
 * Created on 16 Mar 2017 ( Time 18:41:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package net.kumasi.storytime.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "requirement"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="requirement", catalog="storytime" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="RequirementEntity.countAll", query="SELECT COUNT(x) FROM RequirementEntity x" )
} )
public class RequirementEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idRequirement", nullable=false)
    private Integer    idrequirement ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="title", length=75)
    private String     title        ;

    @Column(name="description")
    private String     description  ;

    @Column(name="acceptance_criteria")
    private String     acceptanceCriteria ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on")
    private Date       createdOn    ;

    @Column(name="created_by")
    private Integer    createdBy    ;

    @Temporal(TemporalType.DATE)
    @Column(name="start_date")
    private Date       startDate    ;

    @Temporal(TemporalType.DATE)
    @Column(name="end_date")
    private Date       endDate      ;

    @Column(name="status")
    private Integer    status       ;

    @Column(name="priority")
    private Integer    priority     ;

	// "statusCodeId" (column "Status_Code_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(targetEntity=SpecificationTypeEntity.class)
    @JoinTable(name="requirement_specification_type", 
      joinColumns=@JoinColumn(name="Requirement_idRequirement", referencedColumnName="idRequirement"),
      inverseJoinColumns=@JoinColumn(name="Specification_Type_idRequirement_Type", referencedColumnName="idRequirement_Type")
     ) 

    private List<SpecificationTypeEntity> listOfSpecificationType;

    @ManyToOne
    @JoinColumn(name="Status_Code_id", referencedColumnName="id")
    private StatusCodeEntity statusCode  ;

    @OneToMany(mappedBy="requirement", targetEntity=CommentEntity.class)
    private List<CommentEntity> listOfComment;

    @OneToMany(mappedBy="requirement", targetEntity=PersonAssignmentEntity.class)
    private List<PersonAssignmentEntity> listOfPersonAssignment;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public RequirementEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdrequirement( Integer idrequirement ) {
        this.idrequirement = idrequirement ;
    }
    public Integer getIdrequirement() {
        return this.idrequirement;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : title ( VARCHAR ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : description ( MEDIUMTEXT ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }

    //--- DATABASE MAPPING : acceptance_criteria ( MEDIUMTEXT ) 
    public void setAcceptanceCriteria( String acceptanceCriteria ) {
        this.acceptanceCriteria = acceptanceCriteria;
    }
    public String getAcceptanceCriteria() {
        return this.acceptanceCriteria;
    }

    //--- DATABASE MAPPING : created_on ( DATETIME ) 
    public void setCreatedOn( Date createdOn ) {
        this.createdOn = createdOn;
    }
    public Date getCreatedOn() {
        return this.createdOn;
    }

    //--- DATABASE MAPPING : created_by ( INT ) 
    public void setCreatedBy( Integer createdBy ) {
        this.createdBy = createdBy;
    }
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    //--- DATABASE MAPPING : start_date ( DATE ) 
    public void setStartDate( Date startDate ) {
        this.startDate = startDate;
    }
    public Date getStartDate() {
        return this.startDate;
    }

    //--- DATABASE MAPPING : end_date ( DATE ) 
    public void setEndDate( Date endDate ) {
        this.endDate = endDate;
    }
    public Date getEndDate() {
        return this.endDate;
    }

    //--- DATABASE MAPPING : status ( INT ) 
    public void setStatus( Integer status ) {
        this.status = status;
    }
    public Integer getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : priority ( INT ) 
    public void setPriority( Integer priority ) {
        this.priority = priority;
    }
    public Integer getPriority() {
        return this.priority;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfSpecificationType( List<SpecificationTypeEntity> listOfSpecificationType ) {
        this.listOfSpecificationType = listOfSpecificationType;
    }
    public List<SpecificationTypeEntity> getListOfSpecificationType() {
        return this.listOfSpecificationType;
    }

    public void setStatusCode( StatusCodeEntity statusCode ) {
        this.statusCode = statusCode;
    }
    public StatusCodeEntity getStatusCode() {
        return this.statusCode;
    }

    public void setListOfComment( List<CommentEntity> listOfComment ) {
        this.listOfComment = listOfComment;
    }
    public List<CommentEntity> getListOfComment() {
        return this.listOfComment;
    }

    public void setListOfPersonAssignment( List<PersonAssignmentEntity> listOfPersonAssignment ) {
        this.listOfPersonAssignment = listOfPersonAssignment;
    }
    public List<PersonAssignmentEntity> getListOfPersonAssignment() {
        return this.listOfPersonAssignment;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idrequirement);
        sb.append("]:"); 
        sb.append(title);
        // attribute 'description' not usable (type = String Long Text)
        // attribute 'acceptanceCriteria' not usable (type = String Long Text)
        sb.append("|");
        sb.append(createdOn);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(startDate);
        sb.append("|");
        sb.append(endDate);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(priority);
        return sb.toString(); 
    } 

}
