/*
 * Created on 16 Mar 2017 ( Time 18:41:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.storytime.model.jpa;
import java.io.Serializable;

import javax.persistence.*;

/**
 * Composite primary key for entity "RequirementSpecificationTypeEntity" ( stored in table "requirement_specification_type" )
 *
 * @author Telosys Tools Generator
 *
 */
 @Embeddable
public class RequirementSpecificationTypeEntityKey implements Serializable {
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY KEY ATTRIBUTES 
    //----------------------------------------------------------------------
    @Column(name="Requirement_idRequirement", nullable=false)
    private Integer    requirementIdrequirement ;
    
    @Column(name="Specification_Type_idRequirement_Type", nullable=false)
    private Integer    specificationTypeIdrequirementType ;
    

    //----------------------------------------------------------------------
    // CONSTRUCTORS
    //----------------------------------------------------------------------
    public RequirementSpecificationTypeEntityKey() {
        super();
    }

    public RequirementSpecificationTypeEntityKey( Integer requirementIdrequirement, Integer specificationTypeIdrequirementType ) {
        super();
        this.requirementIdrequirement = requirementIdrequirement ;
        this.specificationTypeIdrequirementType = specificationTypeIdrequirementType ;
    }
    
    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR KEY FIELDS
    //----------------------------------------------------------------------
    public void setRequirementIdrequirement( Integer value ) {
        this.requirementIdrequirement = value;
    }
    public Integer getRequirementIdrequirement() {
        return this.requirementIdrequirement;
    }

    public void setSpecificationTypeIdrequirementType( Integer value ) {
        this.specificationTypeIdrequirementType = value;
    }
    public Integer getSpecificationTypeIdrequirementType() {
        return this.specificationTypeIdrequirementType;
    }


    //----------------------------------------------------------------------
    // equals METHOD
    //----------------------------------------------------------------------
	public boolean equals(Object obj) { 
		if ( this == obj ) return true ; 
		if ( obj == null ) return false ;
		if ( this.getClass() != obj.getClass() ) return false ; 
		RequirementSpecificationTypeEntityKey other = (RequirementSpecificationTypeEntityKey) obj; 
		//--- Attribute requirementIdrequirement
		if ( requirementIdrequirement == null ) { 
			if ( other.requirementIdrequirement != null ) 
				return false ; 
		} else if ( ! requirementIdrequirement.equals(other.requirementIdrequirement) ) 
			return false ; 
		//--- Attribute specificationTypeIdrequirementType
		if ( specificationTypeIdrequirementType == null ) { 
			if ( other.specificationTypeIdrequirementType != null ) 
				return false ; 
		} else if ( ! specificationTypeIdrequirementType.equals(other.specificationTypeIdrequirementType) ) 
			return false ; 
		return true; 
	} 


    //----------------------------------------------------------------------
    // hashCode METHOD
    //----------------------------------------------------------------------
	public int hashCode() { 
		final int prime = 31; 
		int result = 1; 
		
		//--- Attribute requirementIdrequirement
		result = prime * result + ((requirementIdrequirement == null) ? 0 : requirementIdrequirement.hashCode() ) ; 
		//--- Attribute specificationTypeIdrequirementType
		result = prime * result + ((specificationTypeIdrequirementType == null) ? 0 : specificationTypeIdrequirementType.hashCode() ) ; 
		
		return result; 
	} 


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() {
		StringBuffer sb = new StringBuffer(); 
		sb.append(requirementIdrequirement); 
		sb.append("|"); 
		sb.append(specificationTypeIdrequirementType); 
        return sb.toString();
    }
}
